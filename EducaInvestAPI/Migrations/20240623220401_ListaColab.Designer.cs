// <auto-generated />
using System;
using EducaInvestAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducaInvestAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240623220401_ListaColab")]
    partial class ListaColab
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EducaInvestAPI.Entities.Atividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CronogramaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicioAtividade")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTerminoAtividade")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoAtividade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StatusAtividade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CronogramaId");

                    b.ToTable("TB_ATIVIDADES", (string)null);
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Cronograma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId")
                        .IsUnique();

                    b.ToTable("TB_CRONOGRAMAS", (string)null);
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CronogramaId")
                        .HasColumnType("int");

                    b.Property<decimal>("CustoProjeto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoProjeto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FileBytes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Investido")
                        .HasColumnType("bit");

                    b.Property<string>("NomeProjeto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("StatusProjeto")
                        .HasColumnType("int");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_PROJETOS", (string)null);
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileBytes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "",
                            Cidade = "",
                            DataAcesso = new DateTime(2024, 6, 23, 19, 4, 0, 983, DateTimeKind.Local).AddTicks(8601),
                            Email = "educainvest.co@gmail.com",
                            LinkSocial = "",
                            Nome = "",
                            PasswordHash = new byte[] { 154, 5, 65, 65, 168, 108, 55, 255, 85, 107, 157, 72, 75, 99, 225, 59, 73, 185, 77, 187, 207, 117, 76, 88, 96, 186, 125, 52, 163, 103, 72, 131, 75, 210, 110, 213, 181, 163, 167, 248, 26, 204, 27, 106, 48, 202, 32, 99, 159, 49, 94, 59, 109, 200, 207, 204, 190, 78, 37, 114, 242, 34, 5, 155 },
                            PasswordSalt = new byte[] { 85, 153, 174, 44, 138, 148, 246, 235, 76, 176, 144, 90, 64, 195, 81, 206, 106, 75, 138, 133, 205, 107, 93, 221, 28, 148, 241, 222, 11, 230, 42, 34, 141, 105, 248, 93, 163, 191, 127, 53, 254, 158, 55, 37, 122, 182, 96, 55, 43, 253, 165, 11, 135, 60, 87, 104, 161, 217, 15, 0, 112, 182, 108, 215, 86, 249, 166, 16, 91, 20, 145, 24, 74, 254, 232, 39, 214, 113, 235, 147, 232, 25, 210, 225, 77, 133, 181, 238, 70, 172, 151, 243, 221, 53, 191, 170, 53, 140, 140, 64, 26, 68, 17, 207, 242, 210, 247, 65, 193, 77, 57, 124, 149, 109, 219, 176, 215, 0, 135, 80, 166, 136, 215, 192, 117, 38, 124, 178 },
                            Perfil = 1,
                            Sobrenome = "",
                            Telefone = "",
                            UF = ""
                        });
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Atividade", b =>
                {
                    b.HasOne("EducaInvestAPI.Entities.Cronograma", "Cronograma")
                        .WithMany("Atividades")
                        .HasForeignKey("CronogramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cronograma");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Cronograma", b =>
                {
                    b.HasOne("EducaInvestAPI.Entities.Projeto", "Projeto")
                        .WithOne("Cronograma")
                        .HasForeignKey("EducaInvestAPI.Entities.Cronograma", "ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Projeto", b =>
                {
                    b.HasOne("EducaInvestAPI.Entities.Usuario", "Usuario")
                        .WithMany("Projetos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Usuario", b =>
                {
                    b.HasOne("EducaInvestAPI.Entities.Projeto", null)
                        .WithMany("Colaboradores")
                        .HasForeignKey("ProjetoId");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Cronograma", b =>
                {
                    b.Navigation("Atividades");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Projeto", b =>
                {
                    b.Navigation("Colaboradores");

                    b.Navigation("Cronograma");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Usuario", b =>
                {
                    b.Navigation("Projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
