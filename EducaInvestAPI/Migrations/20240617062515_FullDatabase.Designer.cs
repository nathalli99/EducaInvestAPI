// <auto-generated />
using System;
using EducaInvestAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducaInvestAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240617062515_FullDatabase")]
    partial class FullDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EducaInvestAPI.Entities.Atividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CronogramaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicioAtividade")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTerminoAtividade")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoAtividade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StatusAtividade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CronogramaId");

                    b.ToTable("TB_ATIVIDADES", (string)null);
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Cronograma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId")
                        .IsUnique();

                    b.ToTable("TB_CRONOGRAMAS", (string)null);
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CronogramaId")
                        .HasColumnType("int");

                    b.Property<decimal>("CustoProjeto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoProjeto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FileBytes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Investido")
                        .HasColumnType("bit");

                    b.Property<string>("NomeProjeto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("StatusProjeto")
                        .HasColumnType("int");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_PROJETOS", (string)null);
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileBytes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("UF")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "",
                            Cidade = "",
                            DataAcesso = new DateTime(2024, 6, 17, 3, 25, 14, 814, DateTimeKind.Local).AddTicks(5501),
                            Email = "educainvest.co@gmail.com",
                            LinkSocial = "",
                            Nome = "",
                            PasswordHash = new byte[] { 149, 132, 188, 101, 128, 121, 16, 58, 66, 54, 146, 248, 42, 195, 110, 187, 141, 64, 124, 151, 84, 125, 210, 74, 204, 74, 179, 192, 105, 137, 45, 163, 120, 222, 128, 172, 221, 76, 167, 252, 229, 200, 179, 185, 62, 192, 180, 143, 13, 140, 190, 133, 170, 108, 227, 154, 181, 245, 157, 30, 232, 196, 66, 237 },
                            PasswordSalt = new byte[] { 52, 81, 124, 191, 189, 35, 58, 15, 160, 150, 173, 52, 141, 200, 194, 88, 152, 37, 239, 76, 64, 59, 70, 13, 190, 203, 9, 97, 79, 100, 89, 244, 119, 35, 25, 23, 96, 224, 144, 13, 235, 224, 39, 62, 210, 83, 24, 170, 76, 33, 64, 59, 188, 154, 226, 0, 149, 197, 124, 231, 158, 62, 90, 13, 240, 87, 136, 26, 118, 18, 181, 205, 140, 84, 118, 219, 227, 21, 41, 222, 4, 160, 204, 117, 24, 238, 236, 198, 69, 52, 183, 130, 139, 107, 174, 220, 152, 115, 194, 182, 111, 10, 19, 139, 189, 160, 124, 70, 165, 191, 170, 40, 63, 15, 97, 34, 224, 60, 148, 249, 73, 222, 132, 109, 185, 81, 237, 188 },
                            Perfil = 1,
                            Sobrenome = "",
                            Telefone = "",
                            UF = 6
                        });
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Atividade", b =>
                {
                    b.HasOne("EducaInvestAPI.Entities.Cronograma", "Cronograma")
                        .WithMany("Atividades")
                        .HasForeignKey("CronogramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cronograma");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Cronograma", b =>
                {
                    b.HasOne("EducaInvestAPI.Entities.Projeto", "Projeto")
                        .WithOne("Cronograma")
                        .HasForeignKey("EducaInvestAPI.Entities.Cronograma", "ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Projeto", b =>
                {
                    b.HasOne("EducaInvestAPI.Entities.Usuario", "Usuario")
                        .WithMany("Projetos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Cronograma", b =>
                {
                    b.Navigation("Atividades");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Projeto", b =>
                {
                    b.Navigation("Cronograma");
                });

            modelBuilder.Entity("EducaInvestAPI.Entities.Usuario", b =>
                {
                    b.Navigation("Projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
